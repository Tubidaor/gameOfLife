{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pupulateArray = (numCol, numRow) => {\n      let array = [];\n      let styleAlive = {\n        backgroundColor: \"blue\"\n      };\n      let styleDead = {\n        backgroundColor: \"white\"\n      };\n\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            state: 0,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                style: styleAlive,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 13\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                style: styleDead,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 15\n                }\n              });\n            }\n          });\n        }\n\n        array.push(fill);\n        this.setState({\n          gridStart: array\n        });\n      }\n    };\n\n    this.state = {\n      gridStart: [],\n      running: false\n    };\n  }\n\n  //16377\n  render() {\n    function handleClick(e) {\n      e.preventDefault();\n      this.populateArray(10, 10);\n      this.setState({\n        running: !this.state.running\n      });\n    }\n\n    function randomStart(e) {\n      e.preventDefault();\n\n      for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array[i].length; j++) {\n          let coin = Math.floor(Math.random() * 2);\n          console.log(coin);\n\n          if (coin === 0) {\n            array[i][j].state = 0;\n          }\n\n          if (coin === 1) {\n            array[i][j].state = 1;\n          }\n        }\n      }\n    }\n\n    function playLife(e) {\n      e.preventDefault();\n\n      function sum(row, col) {\n        let cell = array;\n        console.log(cell);\n        let nTopL = row === 0 || col === 0 ? 0 : cell[row - 1][col - 1].state;\n        let nTop = row === 0 ? 0 : cell[row - 1][col].state;\n        let nTopR = row === 0 || col > array.length - 2 ? 0 : cell[row - 1][col + 1].state;\n        let nLeft = col === 0 ? 0 : cell[row][col - 1].state;\n        let nRight = col > array.length - 2 ? 0 : cell[row][col + 1].state;\n        let nBotL = row > array.length - 2 || col === 0 ? 0 : cell[row + 1][col - 1].state;\n        let nBot = row > array.length - 2 ? 0 : cell[row + 1][col].state;\n        let nBotR = row > array.length - 2 || col > array.length - 2 ? 0 : cell[row + 1][col + 1].state;\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR];\n        let sum = 0;\n        neighbors.filter(neigh => {\n          return neigh !== undefined;\n        });\n        console.log(neighbors);\n\n        for (let i = 0; i < neighbors.length; i++) {\n          sum = sum + neighbors[i];\n        }\n\n        console.log(sum);\n        return sum;\n      }\n\n      sum(2, 1);\n\n      for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array[i].length; j++) {\n          if (sum(i, j) < 2) {\n            array[i][j].state = 0;\n          }\n\n          if (array[i][j].state === 0 && sum(i, j) === 3) {\n            array[i][j].state = 1;\n          }\n\n          if (sum(i, j) > 3) {\n            array[i][j].state = 0;\n          }\n        }\n      }\n\n      console.log(array);\n      grid(array);\n    }\n\n    let grid = array => {\n      while (this.state.running === !false) {\n        let gridDiv = [];\n\n        for (let i = 0; i < array.length; i++) {\n          let cell = [];\n\n          for (let j = 0; j < array[i].length; j++) {\n            if (array[i][j].state === 1) {\n              cell.push(array[i][j].alive());\n            }\n\n            if (array[i][j].state === 0) {\n              cell.push(array[i][j].dead());\n            } else {\n              j++;\n            }\n          }\n\n          gridDiv.push(cell);\n        }\n\n        console.log(\"gridStateUpdateRan\");\n        this.setState({\n          grid: gridDiv\n        });\n      }\n    }; // pupulateArray(10,10)\n    // randomStart()\n    // let visualGrid = this.state.grid\n    // visualGrid.map()\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => handleClick(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, \"Click me\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"randomStart\",\n      onClick: e => randomStart(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, \" Random Start \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => playLife(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, \" start \"), this.state.grid);\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","pupulateArray","numCol","numRow","array","styleAlive","backgroundColor","styleDead","i","fill","j","push","id","state","alive","dead","setState","gridStart","running","render","handleClick","e","preventDefault","populateArray","randomStart","length","coin","Math","floor","random","console","log","playLife","sum","row","col","cell","nTopL","nTop","nTopR","nLeft","nRight","nBotL","nBot","nBotR","neighbors","filter","neigh","undefined","grid","gridDiv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gridStart: [],\n      running: false,\n    }\n  }\n\n  pupulateArray = (numCol, numRow) => {\n    let array = []\n    let styleAlive = {\n      backgroundColor: \"blue\"\n    }\n    let styleDead = {\n      backgroundColor: \"white\"\n    }\n    for(let i = 0; i < numCol; i++) {\n      let fill =[]\n      for(let j = 0; j < numRow; j++) {\n        fill.push({\n          id:`${i}${j}`,\n          state: 0,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} style={styleAlive}/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleDead}/>\n            )},\n        })\n      }\n      array.push(fill)\n      this.setState({\n        gridStart: array\n      })\n  }\n  }\n\n\n\n\n\n//16377\n\n  render() {\n    \n    \n\n    function handleClick(e) {\n      e.preventDefault();\n      this.populateArray(10,10)\n      this.setState({\n        running: !this.state.running,\n      })\n    }\n\n\n\n    function randomStart(e) {\n      e.preventDefault();\n      for(let i = 0; i < array.length; i++) {\n    \n        for(let j = 0; j < array[i].length; j++) {\n          let coin = Math.floor(Math.random() * 2);\n          console.log(coin)\n          if(coin === 0) {\n            array[i][j].state = 0\n          }\n          if(coin === 1) {\n            array[i][j].state = 1\n          }\n        }\n      }\n    }\n\n    function playLife(e) {\n      e.preventDefault();\n\n    function sum(row,col) {\n      let cell = array\n      console.log(cell)\n      \n      let nTopL = row === 0 || col === 0? 0: cell[row-1][col-1].state;\n      let nTop = row  === 0? 0: cell[row-1][col].state;\n      let nTopR = (row === 0) || (col > array.length-2)? 0: cell[row-1][col+1].state;\n      let nLeft = col === 0? 0: cell[row][col-1].state;\n      let nRight = col > array.length-2? 0: cell[row][col+1].state;\n      let nBotL = (row > array.length-2) || (col === 0)? 0: cell[row+1][col-1].state;\n      let nBot = row > array.length-2? 0: cell[row+1][col].state;\n      let nBotR = (row > array.length-2) || (col > array.length-2)? 0: cell[row+1][col+1].state;\n      const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n      let sum = 0\n      \n      neighbors.filter(neigh => {return neigh !== undefined})\n      console.log(neighbors)\n      for(let i = 0; i < neighbors.length; i++) {\n        sum = sum + neighbors[i]\n      }\n      console.log(sum)\n      return sum\n    }\n    sum(2,1)\n    for(let i = 0; i < array.length; i++) {\n  \n      for(let j = 0; j < array[i].length; j++) {\n        if(sum(i,j) < 2) {\n          array[i][j].state = 0\n        }\n        if(array[i][j].state === 0 && sum(i,j) === 3) {\n          array[i][j].state = 1\n        }\n        if(sum(i,j) > 3) {\n          array[i][j].state = 0\n        }\n      }\n    }\n    console.log(array)\n    grid(array)\n  }\n\n  let grid = (array) => {\n    while(this.state.running === !false) {\n      let gridDiv = []\n      for(let i = 0; i < array.length; i++) {\n        let cell = []\n        for(let j = 0; j < array[i].length; j++){\n          if(array[i][j].state === 1) {\n          cell.push(array[i][j].alive())\n          }\n          if(array[i][j].state === 0) {\n          cell.push(array[i][j].dead())\n          }else { j++}\n        }\n        gridDiv.push(cell)\n      }\n      console.log(\"gridStateUpdateRan\")\n      this.setState({\n        grid: gridDiv,\n      })\n    }\n  }\n\n\n    // pupulateArray(10,10)\n    // randomStart()\n\n    // let visualGrid = this.state.grid\n    // visualGrid.map()\n\n\n\n  return (\n    <div className=\"App\">\n      <button onClick={e => handleClick(e)}>Click me</button>\n      <button className={\"randomStart\"} onClick={e => randomStart(e)} > Random Start </button>\n      <button onClick={e => playLife(e)}> start </button>\n      {this.state.grid}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}