{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        running: !this.state.running\n      });\n      console.log(this.state.running);\n    };\n\n    this.state = {\n      running: false\n    };\n  }\n\n  //16377\n  componentDidMount() {\n    this.pupulateArray(10, 10);\n    this.randomStart();\n  }\n\n  render() {\n    let array = []; //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n\n    function pupulateArray(numCol, numRow) {\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            state: 0,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                \"background-color\": \"blue\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 15\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                \"background-color\": \"white\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 17\n                }\n              });\n            }\n          });\n        }\n\n        array.push(fill);\n      }\n    }\n\n    function randomStart() {\n      for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array[i].length; j++) {\n          let coin = Math.floor(Math.random() * 2);\n          console.log(coin);\n\n          if (coin === 0) {\n            array[i][j].state = 0;\n          }\n\n          if (coin === 1) {\n            array[i][j].state = 1;\n          }\n        }\n      }\n    }\n\n    function playLife() {\n      function sum(col, row) {\n        let cell = this.state.grid;\n        let nTopL = cell[row - 1][col - 1];\n        let nTop = cell[row - 1][col];\n        let nTopR = cell[row - 1][col + 1];\n        let nLeft = cell[row][col - 1];\n        let nRight = cell[row][col + 1];\n        let nBotL = cell[row + 1][col - 1];\n        let nBot = cell[row + 1][col];\n        let nBotR = cell[row + 1][col + 1];\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR];\n        let sum = 0;\n\n        for (let i = 0; i < neighbors.length; i++) {\n          sum = sum + neighbors[i];\n        }\n\n        return sum;\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array[i][j].length; j++) {\n          let neighbors = sum(i, j);\n\n          if (neighbors < 2) {\n            array[i][j].state = 0;\n          }\n\n          if (this.state.grid[i][j].state === 0 && neighbors === 3) {\n            array[i][j].state = 1;\n          }\n\n          if (neighbors > 3) {\n            array[i][j].state = 0;\n          }\n        }\n      }\n    }\n\n    let grid = array => {\n      while (this.state.running === !false) {\n        playLife();\n        let gridDiv = [];\n\n        for (let i = 0; i < array.length; i++) {\n          let cell = [];\n\n          for (let j = 0; j < array[i].length; j++) {\n            if (array[i][j].state === 1) {\n              cell.push(array[i][j].alive());\n            }\n\n            cell.push(array[i][j].dead());\n          }\n\n          gridDiv.push(cell);\n        }\n\n        console.log(gridDiv);\n        return gridDiv;\n      }\n    };\n\n    pupulateArray();\n    randomStart();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, \"Click me\"), grid(this.state.grid));\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","handleClick","setState","running","state","console","log","componentDidMount","pupulateArray","randomStart","render","array","numCol","numRow","i","fill","j","push","id","alive","dead","length","coin","Math","floor","random","playLife","sum","col","row","cell","grid","nTopL","nTop","nTopR","nLeft","nRight","nBotL","nBot","nBotR","neighbors","gridDiv"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAIA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOL,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADT,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,OAAvB;AACD,KAZkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAcH;AAEAI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL,CAAmB,EAAnB,EAAsB,EAAtB;AACA,SAAKC,WAAL;AACC;;AAEDC,EAAAA,MAAM,GAAG;AAEP,QAAIC,KAAK,GAAG,EAAZ,CAFO,CAGP;AACA;AACA;AACA;;AACA,aAASH,aAAT,CAAuBI,MAAvB,EAA+BC,MAA/B,EAAuC;AACrC,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAnB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,YAAIC,IAAI,GAAE,EAAV;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,MAAnB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9BD,UAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,YAAAA,EAAE,EAAE,GAAEJ,CAAE,GAAEE,CAAE,EADJ;AAERZ,YAAAA,KAAK,EAAE,CAFC;AAGRe,YAAAA,KAAK,EAAE,MAAM;AACb,kCACE;AAAK,gBAAA,SAAS,EAAG,UAASL,CAAE,GAAEE,CAAE,EAAhC;AAAmC,oCAAiB,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE,aANM;AAORI,YAAAA,IAAI,EAAE,MAAM;AACV,kCACE;AAAK,gBAAA,SAAS,EAAG,UAASN,CAAE,GAAEE,CAAE,EAAhC;AAAmC,oCAAiB,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE;AAVI,WAAV;AAYD;;AACDL,QAAAA,KAAK,CAACM,IAAN,CAAWF,IAAX;AACH;AACF;;AAED,aAASN,WAAT,GAAuB;AACrB,WAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACU,MAAzB,EAAiCP,CAAC,EAAlC,EAAsC;AAEpC,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAACG,CAAD,CAAL,CAASO,MAA5B,EAAoCL,CAAC,EAArC,EAAyC;AACvC,cAAIM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;AACApB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;;AACA,cAAGA,IAAI,KAAK,CAAZ,EAAe;AACbX,YAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYZ,KAAZ,GAAoB,CAApB;AACD;;AACD,cAAGkB,IAAI,KAAK,CAAZ,EAAe;AACbX,YAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYZ,KAAZ,GAAoB,CAApB;AACD;AACF;AACF;AACF;;AAED,aAASsB,QAAT,GAAoB;AAElB,eAASC,GAAT,CAAaC,GAAb,EAAiBC,GAAjB,EAAsB;AACpB,YAAIC,IAAI,GAAG,KAAK1B,KAAL,CAAW2B,IAAtB;AACA,YAAIC,KAAK,GAAGF,IAAI,CAACD,GAAG,GAAC,CAAL,CAAJ,CAAYD,GAAG,GAAC,CAAhB,CAAZ;AACA,YAAIK,IAAI,GAAGH,IAAI,CAACD,GAAG,GAAC,CAAL,CAAJ,CAAYD,GAAZ,CAAX;AACA,YAAIM,KAAK,GAAGJ,IAAI,CAACD,GAAG,GAAC,CAAL,CAAJ,CAAYD,GAAG,GAAC,CAAhB,CAAZ;AACA,YAAIO,KAAK,GAAGL,IAAI,CAACD,GAAD,CAAJ,CAAUD,GAAG,GAAC,CAAd,CAAZ;AACA,YAAIQ,MAAM,GAAGN,IAAI,CAACD,GAAD,CAAJ,CAAUD,GAAG,GAAC,CAAd,CAAb;AACA,YAAIS,KAAK,GAAGP,IAAI,CAACD,GAAG,GAAC,CAAL,CAAJ,CAAYD,GAAG,GAAC,CAAhB,CAAZ;AACA,YAAIU,IAAI,GAAGR,IAAI,CAACD,GAAG,GAAC,CAAL,CAAJ,CAAYD,GAAZ,CAAX;AACA,YAAIW,KAAK,GAAGT,IAAI,CAACD,GAAG,GAAC,CAAL,CAAJ,CAAYD,GAAG,GAAC,CAAhB,CAAZ;AACA,cAAMY,SAAS,GAAG,CAACR,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiDC,KAAjD,CAAlB;AACA,YAAIZ,GAAG,GAAG,CAAV;;AACA,aAAI,IAAIb,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG0B,SAAS,CAACnB,MAA7B,EAAqCP,CAAC,EAAtC,EAA0C;AACxCa,UAAAA,GAAG,GAAGA,GAAG,GAAGa,SAAS,CAAC1B,CAAD,CAArB;AACD;;AACD,eAAOa,GAAP;AACD;;AAED,WAAI,IAAIb,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACU,MAAzB,EAAiCP,CAAC,EAAlC,EAAsC;AAEpC,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYK,MAA/B,EAAuCL,CAAC,EAAxC,EAA4C;AAC1C,cAAIwB,SAAS,GAAGb,GAAG,CAACb,CAAD,EAAGE,CAAH,CAAnB;;AACA,cAAGwB,SAAS,GAAG,CAAf,EAAkB;AAChB7B,YAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYZ,KAAZ,GAAoB,CAApB;AACD;;AACD,cAAG,KAAKA,KAAL,CAAW2B,IAAX,CAAgBjB,CAAhB,EAAmBE,CAAnB,EAAsBZ,KAAtB,KAAgC,CAAhC,IAAqCoC,SAAS,KAAK,CAAtD,EAAyD;AACvD7B,YAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYZ,KAAZ,GAAoB,CAApB;AACD;;AACD,cAAGoC,SAAS,GAAG,CAAf,EAAkB;AAChB7B,YAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYZ,KAAZ,GAAoB,CAApB;AACD;AACF;AACF;AAEF;;AACD,QAAI2B,IAAI,GAAIpB,KAAD,IAAW;AACpB,aAAM,KAAKP,KAAL,CAAWD,OAAX,KAAuB,CAAC,KAA9B,EAAqC;AACnCuB,QAAAA,QAAQ;AACR,YAAIe,OAAO,GAAG,EAAd;;AACA,aAAI,IAAI3B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACU,MAAzB,EAAiCP,CAAC,EAAlC,EAAsC;AACpC,cAAIgB,IAAI,GAAG,EAAX;;AACA,eAAI,IAAId,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAACG,CAAD,CAAL,CAASO,MAA5B,EAAoCL,CAAC,EAArC,EAAwC;AACtC,gBAAGL,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYZ,KAAZ,KAAsB,CAAzB,EAA4B;AAC5B0B,cAAAA,IAAI,CAACb,IAAL,CAAUN,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYG,KAAZ,EAAV;AACC;;AACDW,YAAAA,IAAI,CAACb,IAAL,CAAUN,KAAK,CAACG,CAAD,CAAL,CAASE,CAAT,EAAYI,IAAZ,EAAV;AACD;;AACDqB,UAAAA,OAAO,CAACxB,IAAR,CAAaa,IAAb;AACD;;AACDzB,QAAAA,OAAO,CAACC,GAAR,CAAYmC,OAAZ;AACA,eAAOA,OAAP;AACD;AACF,KAjBD;;AAmBAjC,IAAAA,aAAa;AACbC,IAAAA,WAAW;AAEX,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG8B,IAAI,CAAC,KAAK3B,KAAL,CAAW2B,IAAZ,CAFP,CADF;AAMC;;AAxI8C","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      running: false,\n    }\n  }\n  \n  handleClick = () => {\n    this.setState({\n      running: !this.state.running,\n    })\n    console.log(this.state.running)\n  }\n\n\n\n\n\n\n//16377\n\ncomponentDidMount() {\n  this.pupulateArray(10,10)\n  this.randomStart()\n  }\n\n  render() {\n    \n    let array = []\n    //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n    function pupulateArray(numCol, numRow) {\n      for(let i = 0; i < numCol; i++) {\n        let fill =[]\n        for(let j = 0; j < numRow; j++) {\n          fill.push({\n            id:`${i}${j}`,\n            state: 0,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} background-color=\"blue\"/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} background-color=\"white\"/>\n              )},\n          })\n        }\n        array.push(fill)\n    }\n  }\n\n  function randomStart() {\n    for(let i = 0; i < array.length; i++) {\n  \n      for(let j = 0; j < array[i].length; j++) {\n        let coin = Math.floor(Math.random() * 2);\n        console.log(coin)\n        if(coin === 0) {\n          array[i][j].state = 0\n        }\n        if(coin === 1) {\n          array[i][j].state = 1\n        }\n      }\n    }\n  }\n\n  function playLife() {\n\n    function sum(col,row) {\n      let cell = this.state.grid\n      let nTopL = cell[row-1][col-1]\n      let nTop = cell[row-1][col]\n      let nTopR = cell[row-1][col+1]\n      let nLeft = cell[row][col-1]\n      let nRight = cell[row][col+1]\n      let nBotL = cell[row+1][col-1]\n      let nBot = cell[row+1][col]\n      let nBotR = cell[row+1][col+1]\n      const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n      let sum = 0\n      for(let i = 0; i < neighbors.length; i++) {\n        sum = sum + neighbors[i]\n      }\n      return sum\n    }\n  \n    for(let i = 0; i < array.length; i++) {\n  \n      for(let j = 0; j < array[i][j].length; j++) {\n        let neighbors = sum(i,j)\n        if(neighbors < 2) {\n          array[i][j].state = 0\n        }\n        if(this.state.grid[i][j].state === 0 && neighbors === 3) {\n          array[i][j].state = 1\n        }\n        if(neighbors > 3) {\n          array[i][j].state = 0\n        }\n      }\n    }\n  \n  }\n  let grid = (array) => {\n    while(this.state.running === !false) {\n      playLife()\n      let gridDiv = []\n      for(let i = 0; i < array.length; i++) {\n        let cell = []\n        for(let j = 0; j < array[i].length; j++){\n          if(array[i][j].state === 1) {\n          cell.push(array[i][j].alive())\n          }\n          cell.push(array[i][j].dead())\n        }\n        gridDiv.push(cell)\n      }\n      console.log(gridDiv)\n      return gridDiv\n    }\n  }\n\n  pupulateArray()\n  randomStart()\n\n  return (\n    <div className=\"App\">\n      <button onClick={this.handleClick}>Click me</button>\n      {grid(this.state.grid)}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}