{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pupulateArray = (numCol, numRow) => {\n      let array = [];\n      let styleAlive = {\n        backgroundColor: \"blue\"\n      };\n      let styleDead = {\n        backgroundColor: \"white\"\n      };\n\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            state: 0,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                style: styleAlive,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 13\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                style: styleDead,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 15\n                }\n              });\n            }\n          });\n        }\n\n        array.push(fill);\n        this.setState({\n          gridStart: array\n        });\n      }\n\n      console.log(this.state.gridStart);\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        running: !this.state.running\n      });\n      this.pupulateArray(10, 10);\n    };\n\n    this.randomStart = () => {\n      let {\n        gridStart\n      } = this.state;\n      let gridInitialState = [];\n      let styleAlive = {\n        backgroundColor: \"blue\"\n      };\n      let styleDead = {\n        backgroundColor: \"white\"\n      };\n\n      for (let i = 0; i < gridStart.length; i++) {\n        let preGrid = [];\n\n        for (let j = 0; j < gridStart[i].length; j++) {\n          let coin = Math.floor(Math.random() * 2);\n          console.log(coin);\n\n          if (coin === 0) {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 0,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 17\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 19\n                  }\n                });\n              }\n            });\n          }\n\n          if (coin === 1) {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 1,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 15\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 17\n                  }\n                });\n              }\n            });\n          }\n        }\n\n        gridInitialState.push(preGrid);\n      }\n\n      this.setState({\n        gridInitialState\n      });\n      console.log(gridInitialState);\n    };\n\n    this.playLife = () => {\n      let cell = this.state.gridInitialState;\n      let emptyGrid = [];\n      console.log(this.state.gridInitialState);\n\n      function sum(row, col) {\n        let nTopL = cell[row - 1] === undefined || cell[row - 1][col - 1] === undefined ? 0 : cell[row - 1][col - 1].state;\n        let nTop = cell[row - 1] === undefined || cell[row - 1][col] === undefined ? 0 : cell[row - 1][col].state;\n        let nTopR = row === 0 || col > cell[row - 1].length - 2 ? 0 : cell[row - 1][col + 1].state;\n        let nLeft = col === 0 ? 0 : cell[row][col - 1].state;\n        let nRight = col > cell[row].length - 2 ? 0 : cell[row][col + 1].state;\n        let nBotL = cell[row + 1] === undefined || cell[row + 1][col - 1] === undefined ? 0 : cell[row + 1][col - 1].state;\n        let nBot = cell[row + 1] === undefined || cell[row + 1][col] === undefined ? 0 : cell[row + 1][col].state;\n        let nBotR = row > cell.length - 2 || col > cell[row + 1].length - 2 ? 0 : cell[row + 1][col + 1].state;\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR];\n        let sum = 0;\n        neighbors.filter(neigh => {\n          return neigh !== undefined;\n        });\n        console.log(neighbors);\n\n        for (let i = 0; i < neighbors.length; i++) {\n          sum = sum + neighbors[i];\n        }\n\n        console.log(sum);\n        return sum;\n      }\n\n      let styleAlive = {\n        backgroundColor: \"blue\"\n      };\n      let styleDead = {\n        backgroundColor: \"white\"\n      };\n\n      for (let i = 0; i < cell.length; i++) {\n        let preGrid = [];\n\n        for (let j = 0; j < cell[i].length; j++) {\n          console.log(i, j);\n\n          if (sum(i, j) < 2 && cell[i][j].state === 1) {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 0,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 15\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 17\n                  }\n                });\n              }\n            });\n          }\n\n          if (cell[i][j].state === 0 && sum(i, j) === 3) {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 1,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 13\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 15\n                  }\n                });\n              }\n            });\n          }\n\n          if (sum(i, j) === 2 && cell[i][j].state === 1) {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 1,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 13\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 15\n                  }\n                });\n              }\n            });\n          }\n\n          if (sum(i, j) > 3) {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 0,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 13\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 15\n                  }\n                });\n              }\n            });\n          } else {\n            preGrid.push({\n              id: `${i}${j}`,\n              state: 0,\n              alive: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleAlive,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 13\n                  }\n                });\n              },\n              dead: () => {\n                return /*#__PURE__*/React.createElement(\"div\", {\n                  className: `div div${i}${j}`,\n                  style: styleDead,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 15\n                  }\n                });\n              }\n            });\n          }\n        }\n\n        emptyGrid.push(preGrid);\n        this.setState({\n          gridInitialState: emptyGrid\n        });\n      }\n\n      console.log(emptyGrid);\n      this.grid(emptyGrid);\n    };\n\n    this.grid = array => {\n      let gridDiv = [];\n\n      for (let i = 0; i < array.length; i++) {\n        let cell = [];\n\n        for (let j = 0; j < array[i].length; j++) {\n          if (array[i][j].state === 1) {\n            cell.push(array[i][j].alive());\n          }\n\n          if (array[i][j].state === 0) {\n            cell.push(array[i][j].dead());\n          } else {\n            j++;\n          }\n        }\n\n        gridDiv.push(cell);\n      }\n\n      this.setState({\n        gridRun: gridDiv\n      });\n    };\n\n    this.state = {\n      gridStart: [],\n      gridInitialState: [],\n      gridRun: [],\n      running: false\n    };\n  }\n\n  render() {\n    // pupulateArray(10,10)\n    // randomStart()\n    // let visualGrid = this.state.grid\n    // visualGrid.map()\n    // let displayLife = this.state.gridRun.ma;\n    console.log(this.state.gridRun);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, \"Click me\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"randomStart\",\n      onClick: this.randomStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }\n    }, \" Random Start \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.playLife,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, \" start \"), this.state.gridRun);\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","pupulateArray","numCol","numRow","array","styleAlive","backgroundColor","styleDead","i","fill","j","push","id","state","alive","dead","setState","gridStart","console","log","handleClick","running","randomStart","gridInitialState","length","preGrid","coin","Math","floor","random","playLife","cell","emptyGrid","sum","row","col","nTopL","undefined","nTop","nTopR","nLeft","nRight","nBotL","nBot","nBotR","neighbors","filter","neigh","grid","gridDiv","gridRun","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gridStart: [],\n      gridInitialState: [],\n      gridRun: [],\n      running: false,\n    }\n  }\n\n  pupulateArray = (numCol, numRow) => {\n    let array = []\n    let styleAlive = {\n      backgroundColor: \"blue\"\n    }\n    let styleDead = {\n      backgroundColor: \"white\"\n    }\n    for(let i = 0; i < numCol; i++) {\n      let fill =[]\n      for(let j = 0; j < numRow; j++) {\n        fill.push({\n          id:`${i}${j}`,\n          state: 0,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} style={styleAlive}/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleDead}/>\n            )},\n        })\n      }\n      array.push(fill)\n      this.setState({\n        gridStart: array,\n      })\n  }\n  console.log(this.state.gridStart)\n  }\n\n  handleClick = () => {\n    \n    this.setState({\n      running: !this.state.running,\n    })\n    this.pupulateArray(10, 10)\n  }\n\n\n  randomStart = () => {\n    let { gridStart } = this.state\n    let gridInitialState = []\n    let styleAlive = {\n      backgroundColor: \"blue\"\n    }\n    let styleDead = {\n      backgroundColor: \"white\"\n    }\n\n    for(let i = 0; i < gridStart.length; i++) {\n      let preGrid = []\n  \n      for(let j = 0; j < gridStart[i].length; j++) {\n        let coin = Math.floor(Math.random() * 2);\n        console.log(coin)\n        if(coin === 0) {\n          preGrid.push(\n            {\n              id:`${i}${j}`,\n              state: 0,\n              alive: () => {\n              return (\n                <div className={`div div${i}${j}`} style={styleAlive}/>\n              )},\n              dead: () => {\n                return (\n                  <div className={`div div${i}${j}`} style={styleDead}/>\n                )},\n            }\n        )\n        }\n        if(coin === 1) {\n          preGrid.push(\n          {\n            id:`${i}${j}`,\n            state: 1,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleAlive}/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} style={styleDead}/>\n              )},\n          })\n        }\n        \n      }\n      gridInitialState.push(preGrid)\n    }\n    this.setState({\n      gridInitialState\n    })\n    console.log(gridInitialState)\n  }\n//16377\n  playLife = () => {\n  \n  let cell = this.state.gridInitialState\n  let emptyGrid = []\n  console.log(this.state.gridInitialState)\n  function sum(row,col) {\n    let nTopL = cell[row-1] === undefined|| cell[row-1][col-1] === undefined? 0: cell[row-1][col-1].state;\n    let nTop = cell[row-1] === undefined || cell[row-1][col] === undefined? 0: cell[row-1][col].state;\n    let nTopR = (row === 0) || (col > cell[row-1].length-2)? 0: cell[row-1][col+1].state;\n    let nLeft = col === 0? 0: cell[row][col-1].state;\n    let nRight = col > cell[row].length-2? 0: cell[row][col+1].state;\n    let nBotL = cell[row+1] === undefined || cell[row+1][col-1] === undefined? 0: cell[row+1][col-1].state;\n    let nBot = cell[row+1] === undefined || cell[row+1][col] === undefined? 0: cell[row+1][col].state;\n    let nBotR = (row > cell.length-2) || (col > cell[row+1].length-2)? 0: cell[row+1][col+1].state;\n    const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n    let sum = 0\n    \n    neighbors.filter(neigh => {return neigh !== undefined})\n    console.log(neighbors)\n    for(let i = 0; i < neighbors.length; i++) {\n      sum = sum + neighbors[i]\n    }\n    console.log(sum)\n    return sum\n  }\n  let styleAlive = {\n    backgroundColor: \"blue\"\n  }\n  let styleDead = {\n    backgroundColor: \"white\"\n  }\n  for(let i = 0; i < cell.length; i++) {\n    let preGrid = []\n    for(let j = 0; j < cell[i].length; j++) {\n      console.log(i,j)\n      if(sum(i,j) < 2 && cell[i][j].state === 1) {\n        preGrid.push(\n          {\n            id:`${i}${j}`,\n            state: 0,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleAlive}/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} style={styleDead}/>\n              )},\n          }\n      )\n    }\n    if(cell[i][j].state === 0 && sum(i,j) === 3) {\n      preGrid.push(\n        {\n          id:`${i}${j}`,\n          state: 1,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} style={styleAlive}/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleDead}/>\n            )},\n        }\n    )\n    }\n    if(sum(i,j) === 2 && cell[i][j].state === 1) {\n      preGrid.push(\n        {\n          id:`${i}${j}`,\n          state: 1,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} style={styleAlive}/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleDead}/>\n            )},\n        }\n    )\n    }\n    if(sum(i,j) > 3) {\n      preGrid.push(\n        {\n          id:`${i}${j}`,\n          state: 0,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} style={styleAlive}/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleDead}/>\n            )},\n        }\n    )\n    } else {\n      preGrid.push(\n        {\n          id:`${i}${j}`,\n          state: 0,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} style={styleAlive}/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleDead}/>\n            )},\n        }\n    )\n    }\n  }\n  emptyGrid.push(preGrid)\n  this.setState({\n    gridInitialState: emptyGrid\n  })\n}\nconsole.log(emptyGrid)\nthis.grid(emptyGrid)\n}\n\ngrid = (array) => {\n    let gridDiv = []\n    for(let i = 0; i < array.length; i++) {\n      let cell = []\n      for(let j = 0; j < array[i].length; j++){\n        if(array[i][j].state === 1) {\n        cell.push(array[i][j].alive())\n        }\n        if(array[i][j].state === 0) {\n        cell.push(array[i][j].dead())\n        } else { j++}\n      }\n      gridDiv.push(cell)\n    }\n    this.setState({\n      gridRun: gridDiv,\n    })\n}\n\n  render() {\n    // pupulateArray(10,10)\n    // randomStart()\n\n    // let visualGrid = this.state.grid\n    // visualGrid.map()\n  // let displayLife = this.state.gridRun.ma;\n  console.log(this.state.gridRun)\n  return (\n    <div className=\"App\">\n      <button onClick={this.handleClick}>Click me</button>\n      <button className={\"randomStart\"} onClick={this.randomStart} > Random Start </button>\n      <button onClick={this.playLife}> start </button>\n      {this.state.gridRun}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}