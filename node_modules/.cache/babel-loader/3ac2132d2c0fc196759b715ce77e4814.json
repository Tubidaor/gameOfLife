{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        running: !this.state.running\n      });\n      console.log(this.state.running);\n    };\n\n    this.state = {\n      grid: [],\n      running: false\n    };\n  }\n\n  render() {\n    let array = [];\n\n    function pupulateArray(numCol, numRow) {\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            state: 0,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                backgroundColor: \"blue\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 15\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                backgroundColor: \"white\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 17\n                }\n              });\n            }\n          });\n        }\n\n        array.push(fill);\n      }\n\n      this.setState({\n        grid: array\n      });\n    }\n\n    pupulateArray(10, 10);\n    console.log(array);\n\n    function playLife() {\n      function sum(col, row) {\n        let cell = this.state.grid;\n        let nTopL = cell[row - 1][col - 1];\n        let nTop = cell[row - 1][col];\n        let nTopR = cell[row - 1][col + 1];\n        let nLeft = cell[row][col - 1];\n        let nRight = cell[row][col + 1];\n        let nBotL = cell[row + 1][col - 1];\n        let nBot = cell[row + 1][col];\n        let nBotR = cell[row + 1][col + 1];\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR];\n        let sum = 0;\n\n        for (let i = 0; i < neighbors.length; i++) {\n          sum = sum + neighbors[i];\n        }\n\n        return sum;\n      }\n\n      for (let i = 0; i < this.state.grid.length; i++) {\n        for (let j = 0; j < this.state.grid[i][j].length; j++) {\n          neighbors = sum(i, j);\n\n          if (neighbors < 2) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 0\n            });\n          }\n\n          if (this.state.grid[i][j].state === 0 && neighbors === 3) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 1\n            });\n          }\n\n          if (neighbors > 3) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 0\n            });\n          }\n        }\n      }\n    } //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n\n\n    playLife();\n\n    let grid = array => {\n      while (this.state.running === !false) {\n        let gridDiv = [];\n\n        for (let i = 0; i < array.length; i++) {\n          let cell = [];\n\n          for (let j = 0; j < array[i].length; j++) {\n            if (array[i][j].state === 1) {\n              cell.push(array[i][j].alive());\n            }\n\n            cell.push(array[i][j].dead());\n          }\n\n          gridDiv.push(cell);\n        }\n\n        console.log(gridDiv);\n        return gridDiv;\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, \"Click me\"), grid(array));\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","handleClick","setState","running","state","console","log","grid","render","array","pupulateArray","numCol","numRow","i","fill","j","push","id","alive","dead","playLife","sum","col","row","cell","nTopL","nTop","nTopR","nLeft","nRight","nBotL","nBot","nBotR","neighbors","length","gridDiv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      running: false,\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      running: !this.state.running,\n    })\n    console.log(this.state.running)\n  }\n  render() {\n    let array = []\n\n    function pupulateArray(numCol, numRow) {\n      for(let i = 0; i < numCol; i++) {\n        let fill =[]\n        for(let j = 0; j < numRow; j++) {\n          fill.push({\n            id:`${i}${j}`,\n            state: 0,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} backgroundColor=\"blue\"/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} backgroundColor=\"white\"/>\n              )},\n          })\n        }\n        array.push(fill)\n    }\n    this.setState({\n      grid: array,\n    })\n  }\n    pupulateArray(10,10)\n    console.log(array)\n\n\n    function playLife() {\n\n      function sum(col,row) {\n        let cell = this.state.grid\n        let nTopL = cell[row-1][col-1]\n        let nTop = cell[row-1][col]\n        let nTopR = cell[row-1][col+1]\n        let nLeft = cell[row][col-1]\n        let nRight = cell[row][col+1]\n        let nBotL = cell[row+1][col-1]\n        let nBot = cell[row+1][col]\n        let nBotR = cell[row+1][col+1]\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n        let sum = 0\n        for(let i = 0; i < neighbors.length; i++) {\n          sum = sum + neighbors[i]\n        }\n        return sum\n      }\n\n      for(let i = 0; i < this.state.grid.length; i++) {\n\n        for(let j = 0; j < this.state.grid[i][j].length; j++) {\n          neighbors = sum(i,j)\n          if(neighbors < 2) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 0\n            })\n          }\n          if(this.state.grid[i][j].state === 0 && neighbors === 3) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 1\n            })\n          }\n          if(neighbors > 3) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 0\n            })\n          }\n        }\n      }\n\n    }\n\n    //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n\n  playLife()\n  let grid = (array) => {\n    while(this.state.running === !false) {\n      let gridDiv = []\n      for(let i = 0; i < array.length; i++) {\n        let cell = []\n        for(let j = 0; j < array[i].length; j++){\n          if(array[i][j].state === 1) {\n          cell.push(array[i][j].alive())\n          }\n          cell.push(array[i][j].dead())\n        }\n        gridDiv.push(cell)\n      }\n      console.log(gridDiv)\n      return gridDiv\n    }\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={this.handleClick}>Click me</button>\n      {grid(array)}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}