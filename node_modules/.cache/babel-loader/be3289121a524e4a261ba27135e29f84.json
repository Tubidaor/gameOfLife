{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        running: !this.state.running\n      });\n      console.log(this.state.running);\n    };\n\n    this.state = {\n      running: false\n    };\n  }\n\n  //16377\n  render() {\n    let array = [];\n\n    function pupulateArray(numCol, numRow) {\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            state: 0,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                \"background-color\": \"blue\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 15\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                \"background-color\": \"white\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 17\n                }\n              });\n            }\n          });\n        }\n\n        console.log(array);\n        array.push(fill);\n      }\n    }\n\n    pupulateArray(); //   function randomStart() {\n    //     for(let i = 0; i < array.length; i++) {\n    //       for(let j = 0; j < array[i].length; j++) {\n    //         let coin = Math.floor(Math.random() * 2);\n    //         console.log(coin)\n    //         if(coin === 0) {\n    //           array[i][j].state = 0\n    //         }\n    //         if(coin === 1) {\n    //           array[i][j].state = 1\n    //         }\n    //       }\n    //     }\n    //   }\n    //   function playLife() {\n    //   function sum(col,row) {\n    //     let cell = array\n    //     let nTopL = cell[row-1][col-1]\n    //     let nTop = cell[row-1][col]\n    //     let nTopR = cell[row-1][col+1]\n    //     let nLeft = cell[row][col-1]\n    //     let nRight = cell[row][col+1]\n    //     let nBotL = cell[row+1][col-1]\n    //     let nBot = cell[row+1][col]\n    //     let nBotR = cell[row+1][col+1]\n    //     const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n    //     let sum = 0\n    //     for(let i = 0; i < neighbors.length; i++) {\n    //       sum = sum + neighbors[i]\n    //     }\n    //     return sum\n    //   }\n    //   for(let i = 0; i < array.length; i++) {\n    //     for(let j = 0; j < array[i][j].length; j++) {\n    //       let neighbors = sum(i,j)\n    //       if(neighbors < 2) {\n    //         array[i][j].state = 0\n    //       }\n    //       if(array[i][j].state === 0 && neighbors === 3) {\n    //         array[i][j].state = 1\n    //       }\n    //       if(neighbors > 3) {\n    //         array[i][j].state = 0\n    //       }\n    //     }\n    //   }\n    // }\n    // let grid = (array) => {\n    //   while(this.state.running === !false) {\n    //     playLife()\n    //     let gridDiv = []\n    //     for(let i = 0; i < array.length; i++) {\n    //       let cell = []\n    //       for(let j = 0; j < array[i].length; j++){\n    //         if(array[i][j].state === 1) {\n    //         cell.push(array[i][j].alive())\n    //         }\n    //         cell.push(array[i][j].dead())\n    //       }\n    //       gridDiv.push(cell)\n    //     }\n    //     console.log(gridDiv)\n    //     return gridDiv\n    //   }\n    // }\n    // function play() {\n    //   let array = []\n    //   pupulateArray()\n    //   randomStart()\n    //   playLife()\n    //   return grid(array)\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, \"Click me\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","handleClick","setState","running","state","console","log","render","array","pupulateArray","numCol","numRow","i","fill","j","push","id","alive","dead"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAIA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOL,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADT,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,OAAvB;AACD,KAZkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAcH;AAEEI,EAAAA,MAAM,GAAG;AAEP,QAAIC,KAAK,GAAG,EAAZ;;AAEA,aAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACrC,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAnB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,YAAIC,IAAI,GAAE,EAAV;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,MAAnB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9BD,UAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,YAAAA,EAAE,EAAE,GAAEJ,CAAE,GAAEE,CAAE,EADJ;AAERV,YAAAA,KAAK,EAAE,CAFC;AAGRa,YAAAA,KAAK,EAAE,MAAM;AACb,kCACE;AAAK,gBAAA,SAAS,EAAG,UAASL,CAAE,GAAEE,CAAE,EAAhC;AAAmC,oCAAiB,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE,aANM;AAORI,YAAAA,IAAI,EAAE,MAAM;AACV,kCACE;AAAK,gBAAA,SAAS,EAAG,UAASN,CAAE,GAAEE,CAAE,EAAhC;AAAmC,oCAAiB,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE;AAVI,WAAV;AAYD;;AACDT,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAA,QAAAA,KAAK,CAACO,IAAN,CAAWF,IAAX;AAEH;AACA;;AACDJ,IAAAA,aAAa,GA1BN,CA2BT;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAFF;AAOC;;AA3I8C","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      running: false,\n    }\n  }\n  \n  handleClick = () => {\n    this.setState({\n      running: !this.state.running,\n    })\n    console.log(this.state.running)\n  }\n\n\n\n\n\n\n//16377\n\n  render() {\n    \n    let array = []\n\n    function pupulateArray(numCol, numRow) {\n      for(let i = 0; i < numCol; i++) {\n        let fill =[]\n        for(let j = 0; j < numRow; j++) {\n          fill.push({\n            id:`${i}${j}`,\n            state: 0,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} background-color=\"blue\"/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} background-color=\"white\"/>\n              )},\n          })\n        }\n        console.log(array)\n        array.push(fill)\n\n    }\n    }\n    pupulateArray()\n  //   function randomStart() {\n  //     for(let i = 0; i < array.length; i++) {\n    \n  //       for(let j = 0; j < array[i].length; j++) {\n  //         let coin = Math.floor(Math.random() * 2);\n  //         console.log(coin)\n  //         if(coin === 0) {\n  //           array[i][j].state = 0\n  //         }\n  //         if(coin === 1) {\n  //           array[i][j].state = 1\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   function playLife() {\n\n  //   function sum(col,row) {\n  //     let cell = array\n  //     let nTopL = cell[row-1][col-1]\n  //     let nTop = cell[row-1][col]\n  //     let nTopR = cell[row-1][col+1]\n  //     let nLeft = cell[row][col-1]\n  //     let nRight = cell[row][col+1]\n  //     let nBotL = cell[row+1][col-1]\n  //     let nBot = cell[row+1][col]\n  //     let nBotR = cell[row+1][col+1]\n  //     const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n  //     let sum = 0\n  //     for(let i = 0; i < neighbors.length; i++) {\n  //       sum = sum + neighbors[i]\n  //     }\n  //     return sum\n  //   }\n  \n  //   for(let i = 0; i < array.length; i++) {\n  \n  //     for(let j = 0; j < array[i][j].length; j++) {\n  //       let neighbors = sum(i,j)\n  //       if(neighbors < 2) {\n  //         array[i][j].state = 0\n  //       }\n  //       if(array[i][j].state === 0 && neighbors === 3) {\n  //         array[i][j].state = 1\n  //       }\n  //       if(neighbors > 3) {\n  //         array[i][j].state = 0\n  //       }\n  //     }\n  //   }\n  \n  // }\n\n  // let grid = (array) => {\n  //   while(this.state.running === !false) {\n  //     playLife()\n  //     let gridDiv = []\n  //     for(let i = 0; i < array.length; i++) {\n  //       let cell = []\n  //       for(let j = 0; j < array[i].length; j++){\n  //         if(array[i][j].state === 1) {\n  //         cell.push(array[i][j].alive())\n  //         }\n  //         cell.push(array[i][j].dead())\n  //       }\n  //       gridDiv.push(cell)\n  //     }\n  //     console.log(gridDiv)\n  //     return gridDiv\n  //   }\n  // }\n\n  // function play() {\n  //   let array = []\n  //   pupulateArray()\n  //   randomStart()\n  //   playLife()\n\n  //   return grid(array)\n\n  // }\n\n  return (\n    \n    <div className=\"App\">\n      <button onClick={this.handleClick}>Click me</button>\n      {/* {play()} */}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}