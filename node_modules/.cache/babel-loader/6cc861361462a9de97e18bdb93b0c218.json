{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nlet array = [];\n\nfunction pupulateArray(numCol, numRow) {\n  for (let i = 1; i < numCol; i++) {\n    for (let j = 1; j < numRow; j++) {\n      array[i].push({\n        id: {\n          i,\n          j\n        },\n        state: 0\n      });\n    }\n  }\n}\n\npupulateArray(600);\nconsole.log(array);\nconst grid = array.map(item => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `div div${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }\n  }));\n});\nconst visualGrid = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]; // function playLife(start = visualGrid[row[col]]) {\n//   let row = row\n//   let col = col\n//   let cell = start[row[col]]\n//   let nTopL = cell[row-1[col-1]]\n//   let nTop = cell[row-1[col]]\n//   let nTopR = cell[row-1[col+1]]\n//   let nLeft = cell[row[col-1]]\n//   let nRight = cell[row[col+1]]\n//   let nBotL = cell[row+1[col-1]]\n//   let nBot = cell[row+1[col]]\n//   let nBotR = cell[row+1[col+1]]\n//   function sum() {\n//     const neighbors = [nTopL,nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n//     for(let i = 0; i < neighbors.length; i++) {\n//       let sum = 0\n//       sum = sum + neighbors[i]\n//     }\n//     if(neighbors < 2) {\n//       this.setState({\n//       })\n//     }\n//     return \n//   }\n//   if( cell === undefined )\n// }\n//if alive, stays alive if 2 or 3 \n//if alive, will die if less than 2\n//if alive, will die if 4 or more\n//if dead, will be born with exaclty 3 neibohrs\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: grid\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, grid);\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","array","pupulateArray","numCol","numRow","i","j","push","id","state","console","log","grid","map","item","visualGrid","App","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nlet array = []\n\nfunction pupulateArray(numCol, numRow) {\n  for(let i = 1; i < numCol; i++) {\n    for(let j = 1; j < numRow; j++) {\n      array[i].push({id:{i,j}, state: 0})\n    }\n  }\n}\npupulateArray(600)\nconsole.log(array)\nconst grid = array.map(item => {\n  return (\n    <div className={`div div${item.id}`}>\n      {<div></div>}\n    </div>\n  )\n})\nconst visualGrid = [\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0,0,0],\n\n]\n\n// function playLife(start = visualGrid[row[col]]) {\n//   let row = row\n//   let col = col\n//   let cell = start[row[col]]\n//   let nTopL = cell[row-1[col-1]]\n//   let nTop = cell[row-1[col]]\n//   let nTopR = cell[row-1[col+1]]\n//   let nLeft = cell[row[col-1]]\n//   let nRight = cell[row[col+1]]\n//   let nBotL = cell[row+1[col-1]]\n//   let nBot = cell[row+1[col]]\n//   let nBotR = cell[row+1[col+1]]\n//   function sum() {\n//     const neighbors = [nTopL,nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n//     for(let i = 0; i < neighbors.length; i++) {\n//       let sum = 0\n//       sum = sum + neighbors[i]\n//     }\n//     if(neighbors < 2) {\n//       this.setState({\n\n//       })\n//     }\n//     return \n//   }\n//   if( cell === undefined )\n// }\n\n//if alive, stays alive if 2 or 3 \n//if alive, will die if less than 2\n//if alive, will die if 4 or more\n//if dead, will be born with exaclty 3 neibohrs\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: grid,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {grid}\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}