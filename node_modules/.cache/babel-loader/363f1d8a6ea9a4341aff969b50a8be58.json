{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        running: !this.state.running\n      });\n    };\n\n    this.state = {\n      running: false\n    };\n  }\n\n  //16377\n  render() {\n    let array = [];\n\n    function pupulateArray(numCol, numRow) {\n      let styleAlive = {\n        backgroundColor: \"blue\"\n      };\n      let styleDead = {\n        backgroundColor: \"white\"\n      };\n\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            state: 0,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                style: styleAlive,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 15\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                style: styleDead,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 17\n                }\n              });\n            }\n          });\n        }\n\n        array.push(fill);\n        console.log(array);\n      }\n    }\n\n    function randomStart() {\n      for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array[i].length; j++) {\n          let coin = Math.floor(Math.random() * 2);\n          console.log(coin);\n\n          if (coin === 0) {\n            array[i][j].state = 0;\n          }\n\n          if (coin === 1) {\n            array[i][j].state = 1;\n          }\n        }\n      }\n    }\n\n    function playLife() {\n      function sum(col, row) {\n        let cell = array;\n        let nTopL = cell[row - 1][col - 1].state;\n        let nTop = cell[row - 1][col].state;\n        let nTopR = cell[row - 1][col + 1].state;\n        let nLeft = cell[row][col - 1].state;\n        let nRight = cell[row][col + 1].state;\n        let nBotL = cell[row + 1][col - 1].state;\n        let nBot = cell[row + 1][col].state;\n        let nBotR = cell[row + 1][col + 1].state;\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR];\n        let sum = 0;\n\n        for (let i = 0; i < neighbors.length; i++) {\n          if (i === undefined) {\n            i++;\n          }\n\n          sum = sum + neighbors[i];\n        }\n\n        return sum;\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array[i][j].length; j++) {\n          let neighbors = sum(i, j);\n\n          if (neighbors < 2) {\n            array[i][j].state = 0;\n          }\n\n          if (array[i][j].state === 0 && neighbors === 3) {\n            array[i][j].state = 1;\n          }\n\n          if (neighbors > 3) {\n            array[i][j].state = 0;\n          }\n        }\n      }\n    }\n\n    let grid = array => {\n      while (this.state.running === !false) {\n        let gridDiv = [];\n\n        for (let i = 0; i < array.length; i++) {\n          let cell = [];\n\n          for (let j = 0; j < array[i].length; j++) {\n            if (array[i][j].state === 1) {\n              cell.push(array[i][j].alive());\n            }\n\n            if (array[i][j].state === 0) {\n              cell.push(array[i][j].dead());\n            } else {\n              j++;\n            }\n          }\n\n          gridDiv.push(cell);\n        }\n\n        console.log(gridDiv);\n        return gridDiv;\n      }\n    };\n\n    pupulateArray(10, 10);\n    randomStart();\n    playLife();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, \"Click me\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: window.setInterval(playLife(), 1000),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, \" start \"), grid(array));\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","handleClick","setState","running","state","render","array","pupulateArray","numCol","numRow","styleAlive","backgroundColor","styleDead","i","fill","j","push","id","alive","dead","console","log","randomStart","length","coin","Math","floor","random","playLife","sum","col","row","cell","nTopL","nTop","nTopR","nLeft","nRight","nBotL","nBot","nBotR","neighbors","undefined","grid","gridDiv","window","setInterval"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      running: false,\n    }\n  }\n  \n  handleClick = () => {\n    this.setState({\n      running: !this.state.running,\n    })\n  }\n\n\n\n\n\n\n//16377\n\n  render() {\n    \n    let array = []\n\n    function pupulateArray(numCol, numRow) {\n      let styleAlive = {\n        backgroundColor: \"blue\"\n      }\n      let styleDead = {\n        backgroundColor: \"white\"\n      }\n      for(let i = 0; i < numCol; i++) {\n        let fill =[]\n        for(let j = 0; j < numRow; j++) {\n          fill.push({\n            id:`${i}${j}`,\n            state: 0,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} style={styleAlive}/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} style={styleDead}/>\n              )},\n          })\n        }\n        array.push(fill)\n        console.log(array)\n    }\n    }\n\n    function randomStart() {\n      for(let i = 0; i < array.length; i++) {\n    \n        for(let j = 0; j < array[i].length; j++) {\n          let coin = Math.floor(Math.random() * 2);\n          console.log(coin)\n          if(coin === 0) {\n            array[i][j].state = 0\n          }\n          if(coin === 1) {\n            array[i][j].state = 1\n          }\n        }\n      }\n    }\n\n    function playLife() {\n\n    function sum(col,row) {\n      let cell = array\n      let nTopL = cell[row-1][col-1].state\n      let nTop = cell[row-1][col].state\n      let nTopR = cell[row-1][col+1].state\n      let nLeft = cell[row][col-1].state\n      let nRight = cell[row][col+1].state\n      let nBotL = cell[row+1][col-1].state\n      let nBot = cell[row+1][col].state\n      let nBotR = cell[row+1][col+1].state\n      const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n      let sum = 0\n      for(let i = 0; i < neighbors.length; i++) {\n        if(i === undefined){\n          i++\n        }\n        sum = sum + neighbors[i]\n      }\n      return sum\n    }\n  \n    for(let i = 0; i < array.length; i++) {\n  \n      for(let j = 0; j < array[i][j].length; j++) {\n        let neighbors = sum(i,j)\n        if(neighbors < 2) {\n          array[i][j].state = 0\n        }\n        if(array[i][j].state === 0 && neighbors === 3) {\n          array[i][j].state = 1\n        }\n        if(neighbors > 3) {\n          array[i][j].state = 0\n        }\n      }\n    }\n  \n  }\n\n  let grid = (array) => {\n    while(this.state.running === !false) {\n      let gridDiv = []\n      for(let i = 0; i < array.length; i++) {\n        let cell = []\n        for(let j = 0; j < array[i].length; j++){\n          if(array[i][j].state === 1) {\n          cell.push(array[i][j].alive())\n          }\n          if(array[i][j].state === 0) {\n          cell.push(array[i][j].dead())\n          }else { j++}\n        }\n        gridDiv.push(cell)\n      }\n      console.log(gridDiv)\n      return gridDiv\n    }\n  }\n\n\n    pupulateArray(10,10)\n    randomStart()\n    playLife()\n\n  return (\n    <div className=\"App\">\n      <button onClick={this.handleClick}>Click me</button>\n      <button onClick={window.setInterval(playLife(),1000)}> start </button>\n      {grid(array)}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}