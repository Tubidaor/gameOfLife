{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        running: !this.state.running\n      });\n      console.log(this.state.running);\n    };\n\n    this.playLife = () => {\n      function sum(col, row) {\n        let cell = this.state.grid;\n        let nTopL = cell[row - 1][col - 1];\n        let nTop = cell[row - 1][col];\n        let nTopR = cell[row - 1][col + 1];\n        let nLeft = cell[row][col - 1];\n        let nRight = cell[row][col + 1];\n        let nBotL = cell[row + 1][col - 1];\n        let nBot = cell[row + 1][col];\n        let nBotR = cell[row + 1][col + 1];\n        const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR];\n        let sum = 0;\n\n        for (let i = 0; i < neighbors.length; i++) {\n          sum = sum + neighbors[i];\n        }\n\n        return sum;\n      }\n\n      for (let i = 0; i < this.state.grid.length; i++) {\n        for (let j = 0; j < this.state.grid[i][j].length; j++) {\n          let neighbors = sum(i, j);\n\n          if (neighbors < 2) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 0\n            });\n          }\n\n          if (this.state.grid[i][j].state === 0 && neighbors === 3) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 1\n            });\n          }\n\n          if (neighbors > 3) {\n            this.setState({\n              grid: this.state.grid[i][j].state = 0\n            });\n          }\n        }\n      }\n    };\n\n    this.state = {\n      grid: [],\n      running: false\n    };\n  }\n\n  pupulateArray(numCol, numRow) {\n    let array = [];\n\n    for (let i = 0; i < numCol; i++) {\n      let fill = [];\n\n      for (let j = 0; j < numRow; j++) {\n        fill.push({\n          id: `${i}${j}`,\n          state: 0,\n          alive: () => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `div div${i}${j}`,\n              backgroundColor: \"blue\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 13\n              }\n            });\n          },\n          dead: () => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `div div${i}${j}`,\n              backgroundColor: \"white\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 15\n              }\n            });\n          }\n        });\n      }\n\n      array.push(fill);\n    }\n\n    console.log(array);\n    this.setState({\n      grid: array\n    });\n  }\n\n  render() {\n    console.log(this.state.grid);\n    pupulateArray(10, 10); //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n    // this.playLife()\n\n    let grid = array => {\n      while (this.state.running === !false) {\n        let gridDiv = [];\n\n        for (let i = 0; i < array.length; i++) {\n          let cell = [];\n\n          for (let j = 0; j < array[i].length; j++) {\n            if (array[i][j].state === 1) {\n              cell.push(array[i][j].alive());\n            }\n\n            cell.push(array[i][j].dead());\n          }\n\n          gridDiv.push(cell);\n        }\n\n        console.log(gridDiv);\n        return gridDiv;\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, \"Click me\"), grid(this.state.grid));\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","handleClick","setState","running","state","console","log","playLife","sum","col","row","cell","grid","nTopL","nTop","nTopR","nLeft","nRight","nBotL","nBot","nBotR","neighbors","i","length","j","pupulateArray","numCol","numRow","array","fill","push","id","alive","dead","render","gridDiv"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      running: false,\n    }\n  }\n  \n  handleClick = () => {\n    this.setState({\n      running: !this.state.running,\n    })\n    console.log(this.state.running)\n  }\n  pupulateArray(numCol, numRow) {\n    let array = []\n    for(let i = 0; i < numCol; i++) {\n      let fill =[]\n      for(let j = 0; j < numRow; j++) {\n        fill.push({\n          id:`${i}${j}`,\n          state: 0,\n          alive: () => {\n          return (\n            <div className={`div div${i}${j}`} backgroundColor=\"blue\"/>\n          )},\n          dead: () => {\n            return (\n              <div className={`div div${i}${j}`} backgroundColor=\"white\"/>\n            )},\n        })\n      }\n      array.push(fill)\n  }\n  console.log(array)\n  this.setState({\n    grid: array,\n  })\n}\n\n\nplayLife = () => {\n\n  function sum(col,row) {\n    let cell = this.state.grid\n    let nTopL = cell[row-1][col-1]\n    let nTop = cell[row-1][col]\n    let nTopR = cell[row-1][col+1]\n    let nLeft = cell[row][col-1]\n    let nRight = cell[row][col+1]\n    let nBotL = cell[row+1][col-1]\n    let nBot = cell[row+1][col]\n    let nBotR = cell[row+1][col+1]\n    const neighbors = [nTopL, nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n    let sum = 0\n    for(let i = 0; i < neighbors.length; i++) {\n      sum = sum + neighbors[i]\n    }\n    return sum\n  }\n\n  for(let i = 0; i < this.state.grid.length; i++) {\n\n    for(let j = 0; j < this.state.grid[i][j].length; j++) {\n      let neighbors = sum(i,j)\n      if(neighbors < 2) {\n        this.setState({\n          grid: this.state.grid[i][j].state = 0\n        })\n      }\n      if(this.state.grid[i][j].state === 0 && neighbors === 3) {\n        this.setState({\n          grid: this.state.grid[i][j].state = 1\n        })\n      }\n      if(neighbors > 3) {\n        this.setState({\n          grid: this.state.grid[i][j].state = 0\n        })\n      }\n    }\n  }\n\n}\n\n\n\n\n\n  render() {\n    console.log(this.state.grid)\n    pupulateArray(10,10)\n    \n    \n\n\n    \n\n    //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n\n  // this.playLife()\n  let grid = (array) => {\n    while(this.state.running === !false) {\n      let gridDiv = []\n      for(let i = 0; i < array.length; i++) {\n        let cell = []\n        for(let j = 0; j < array[i].length; j++){\n          if(array[i][j].state === 1) {\n          cell.push(array[i][j].alive())\n          }\n          cell.push(array[i][j].dead())\n        }\n        gridDiv.push(cell)\n      }\n      console.log(gridDiv)\n      return gridDiv\n    }\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={this.handleClick}>Click me</button>\n      {grid(this.state.grid)}\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}