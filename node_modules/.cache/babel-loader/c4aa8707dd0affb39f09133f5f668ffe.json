{"ast":null,"code":"var _jsxFileName = \"/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {// grid: grid,\n    };\n  }\n\n  render() {\n    let array = [];\n\n    function pupulateArray(numCol, numRow) {\n      for (let i = 0; i < numCol; i++) {\n        let fill = [];\n\n        for (let j = 0; j < numRow; j++) {\n          fill.push({\n            id: `${i}${j}`,\n            alive: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                backgroundColor: \"blue\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 15\n                }\n              });\n            },\n            dead: () => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `div div${i}${j}`,\n                backgroundColor: \"white\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 17\n                }\n              });\n            }\n          });\n          array.push(fill);\n        }\n      }\n    }\n\n    pupulateArray(10, 10);\n    console.log(array); // function playLife(start = visualGrid[row[col]]) {\n    //   let row = row\n    //   let col = col\n    //   let cell = start[row[col]]\n    //   let nTopL = cell[row-1[col-1]]\n    //   let nTop = cell[row-1[col]]\n    //   let nTopR = cell[row-1[col+1]]\n    //   let nLeft = cell[row[col-1]]\n    //   let nRight = cell[row[col+1]]\n    //   let nBotL = cell[row+1[col-1]]\n    //   let nBot = cell[row+1[col]]\n    //   let nBotR = cell[row+1[col+1]]\n    //   function sum() {\n    //     const neighbors = [nTopL,nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n    //     for(let i = 0; i < neighbors.length; i++) {\n    //       let sum = 0\n    //       sum = sum + neighbors[i]\n    //     }\n    //     if(neighbors < 2) {\n    //       this.setState({\n    //       })\n    //     }\n    //     return \n    //   }\n    //   if( cell === undefined )\n    // }\n    //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/juanbaltazar/Projects/GameOfLife/gameoflife/src/App.js"],"names":["React","App","Component","constructor","props","state","render","array","pupulateArray","numCol","numRow","i","fill","j","push","id","alive","dead","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAIA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CACX;AADW,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,EAAZ;;AAEA,aAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACrC,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAnB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,YAAIC,IAAI,GAAE,EAAV;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,MAAnB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9BD,UAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,YAAAA,EAAE,EAAE,GAAEJ,CAAE,GAAEE,CAAE,EADJ;AAERG,YAAAA,KAAK,EAAE,MAAM;AACb,kCACE;AAAK,gBAAA,SAAS,EAAG,UAASL,CAAE,GAAEE,CAAE,EAAhC;AAAmC,gBAAA,eAAe,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE,aALM;AAMRI,YAAAA,IAAI,EAAE,MAAM;AACV,kCACE;AAAK,gBAAA,SAAS,EAAG,UAASN,CAAE,GAAEE,CAAE,EAAhC;AAAmC,gBAAA,eAAe,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE;AATI,WAAV;AAWFN,UAAAA,KAAK,CAACO,IAAN,CAAWF,IAAX;AACD;AACF;AACF;;AACCJ,IAAAA,aAAa,CAAC,EAAD,EAAI,EAAJ,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAvBO,CA0BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAIF,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAIC;;AAxE8C","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // grid: grid,\n    }\n  }\n  render() {\n    let array = []\n\n    function pupulateArray(numCol, numRow) {\n      for(let i = 0; i < numCol; i++) {\n        let fill =[]\n        for(let j = 0; j < numRow; j++) {\n          fill.push({\n            id:`${i}${j}`,\n            alive: () => {\n            return (\n              <div className={`div div${i}${j}`} backgroundColor=\"blue\"/>\n            )},\n            dead: () => {\n              return (\n                <div className={`div div${i}${j}`} backgroundColor=\"white\"/>\n              )},\n          })\n        array.push(fill)\n      }\n    }\n  }\n    pupulateArray(10,10)\n    console.log(array)\n\n\n    // function playLife(start = visualGrid[row[col]]) {\n    //   let row = row\n    //   let col = col\n    //   let cell = start[row[col]]\n    //   let nTopL = cell[row-1[col-1]]\n    //   let nTop = cell[row-1[col]]\n    //   let nTopR = cell[row-1[col+1]]\n    //   let nLeft = cell[row[col-1]]\n    //   let nRight = cell[row[col+1]]\n    //   let nBotL = cell[row+1[col-1]]\n    //   let nBot = cell[row+1[col]]\n    //   let nBotR = cell[row+1[col+1]]\n    //   function sum() {\n    //     const neighbors = [nTopL,nTop, nTopR, nLeft, nRight, nBotL, nBot, nBotR]\n    //     for(let i = 0; i < neighbors.length; i++) {\n    //       let sum = 0\n    //       sum = sum + neighbors[i]\n    //     }\n    //     if(neighbors < 2) {\n    //       this.setState({\n\n    //       })\n    //     }\n    //     return \n    //   }\n    //   if( cell === undefined )\n    // }\n\n    //if alive, stays alive if 2 or 3 \n    //if alive, will die if less than 2\n    //if alive, will die if 4 or more\n    //if dead, will be born with exaclty 3 neibohrs\n\n\n\n  return (\n    <div className=\"App\">\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}